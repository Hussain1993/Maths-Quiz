/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PupilCWRecord.java
 *
 * Created on 24-Jan-2011, 11:43:19
 */

package Project;
import java.awt.print.PrinterException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author aa08545
 */
public class PupilCWRecord extends javax.swing.JFrame {

    /** Creates new form PupilCWRecord */
    String pupilNum = "";
    public PupilCWRecord(String pupil,String first) {
        initComponents();
        lblWel.setText("This is the class work record for: " + first);//displays the name of the pupil who this class work record belongs to
        pupilNum = pupil;
        showAll();//show all the pupils classwork records
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblWel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClass = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        btnClass = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pupil Class Work Record");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pupil Class Work Record", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lblWel.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblWel.setText("jLabel1");

        tblClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Pupil Number", "First Name", "Last Name", "Class Work Title", "Feedback", "Score", "Max Score", "Percentage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblClass);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnMenu.setText("Main Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnClass.setText("Add Class work");
        btnClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClassActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMenu)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblWel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClass)
                    .addComponent(btnPrint)
                    .addComponent(btnMenu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblSearch.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblSearch.setText("Search:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnShowAll.setText("Show All Data");
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        lblMessage.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblMessage.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShowAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMessage)
                .addContainerGap(285, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnShowAll)
                    .addComponent(lblMessage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // This opnes the main menu
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClassActionPerformed
        // This opens a form to add another classwork
        new InsertCW().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnClassActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tblClass.getSelectedRow();
        try{
            if (row == -1)//check that a row is selected
            {
                throw new Exception ("Row not selected");
            }
            else
            {
                int n = JOptionPane.showConfirmDialog(this, "Do you want to delete this record?","Delete record",JOptionPane.YES_NO_OPTION);//asking the user if they want to delete a record
                switch (n)
                {
                    case 0 : delete(); break;//pressing "Yes"
                    case 1 : break;//pressing "No"
                }
            }//end else
        }//end try
        catch(Exception e){
            lblMessage.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        search();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        showAll();
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
       int n = JOptionPane.showConfirmDialog(this, "Do you want to print these records?","Print Record",JOptionPane.YES_NO_OPTION);//asking the user if they want to print a record
       switch (n)
       {
           case 0 :try {
            print();//print the record
        }//end try
        catch (PrinterException ex) {
        Logger.getLogger(PupilCWRecord.class.getName()).log(Level.SEVERE, null, ex);
        }//end catch
         break;//pressing "Yes"
           case 1 : break;//pressing "No"
       }
    }//GEN-LAST:event_btnPrintActionPerformed
public void showAll(){
    //this shows all the data that is the database that relates to the person with
    //the pupil number that is passed.
    try{
        DatabaseConnect.init();
        Connection conn = DatabaseConnect.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet result = stmt.executeQuery("SELECT PUPIL_CLASS_WORK.PUPIL_NUMBER,PUPILS.PUPIL_FIRST_NAME,PUPILS.PUPIL_LAST_NAME,PUPIL_CLASS_WORK.CLASS_WORK_TITLE,PUPIL_CLASS_WORK.FEEDBACK,PUPIL_CLASS_WORK.CLASS_SCORE,CLASS_WORK.MAX_SCORE FROM PUPIL_CLASS_WORK,PUPILS,CLASS_WORK WHERE PUPIL_CLASS_WORK.PUPIL_NUMBER=PUPILS.PUPIL_NUMBER AND PUPIL_CLASS_WORK.CLASS_WORK_TITLE=CLASS_WORK.CLASS_WORK_TITLE AND (PUPIL_CLASS_WORK.PUPIL_NUMBER='"+pupilNum+"')");
        DefaultTableModel model = (DefaultTableModel)tblClass.getModel();
        if (result != null)
        {
            while (model.getRowCount()>0)
            {
                model.removeRow(0);
            }
            while (result.next())
            {
                pupilNum = result.getString("PUPIL_NUMBER");
                String first = result.getString("PUPIL_FIRST_NAME");
                String last = result.getString("PUPIL_LAST_NAME");
                String title = result.getString("CLASS_WORK_TITLE");
                String feed = result.getString("FEEDBACK");
                double score = result.getInt("CLASS_SCORE");
                double max =  result.getInt("MAX_SCORE");
                double percent = Math.floor((score/max)*100);//work out percentage of score
                //change everything to an int
                int scoreI = (int)score;
                int maxI = (int)max;
                int percentI = (int) percent;
                model.addRow(new Object[]{pupilNum,first,last,title,feed,scoreI,maxI,percentI});
            }
            lblMessage.setText("");
        }//end if
        stmt.close();
        conn.close();
        result.close();
    }//end try
    catch(Exception ex){
            System.err.print("SQLException: ");
            System.err.println(ex.getMessage());
    }//end catch
}//end method
public void delete(){
    //delete a record from the database
    int row = tblClass.getSelectedRow();
     try{
         if (row == -1)
         {
             throw new Exception ("Row not selected");
         }
         else
         {
             String pupil = (String)tblClass.getValueAt(row, 0);
             String title = (String)tblClass.getValueAt(row, 3);
             try{
                DatabaseConnect.init();
                Connection conn = DatabaseConnect.getConnection();
                Statement stmt = conn.createStatement();
                stmt.executeUpdate("DELETE FROM PUPIL_CLASS_WORK WHERE PUPIL_NUMBER='"+pupil+"' AND CLASS_WORK_TITLE='"+title+"'");//delete a pupil class work record
                ResultSet result = stmt.executeQuery("SELECT * FROM PUPIL_CLASS_WORK WHERE PUPIL_NUMBER='"+pupil+"' AND CLASS_WORK_TITLE='"+title+"'");//check if the record has been deleted
                if (result.next())
                {
                    lblMessage.setText("The record was not deleted");
                }
                else
                {
                    showAll();//update the table to show that the record has been deleted
                }
                stmt.close();
                conn.close();
                result.close();
             }//end try
             catch(Exception ex){
                 System.err.print("SQLException: ");
                 System.err.println(ex.getMessage());
             }//end catch
         }//end else
     }//end try
     catch(Exception e){
         lblMessage.setText(e.getMessage());
     }//end catch
}//end method
public void search(){
    //search for a pupil classwork record by classwork title
    String search = txtSearch.getText();
    try{
        if (search.isEmpty())
        {
            throw new Exception ("Search feild empty");
        }
        else
        {
            String pupil = "";
            String first = "";
            String last = "";
            String title = "";
            String feed = "";
            double score = 0;
            double max = 0;
            double percent = 0;
            try {
                DatabaseConnect.init();
                Connection conn = DatabaseConnect.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet result = stmt.executeQuery("SELECT PUPIL_CLASS_WORK.PUPIL_NUMBER,PUPILS.PUPIL_FIRST_NAME,PUPILS.PUPIL_LAST_NAME,PUPIL_CLASS_WORK.CLASS_WORK_TITLE,PUPIL_CLASS_WORK.FEEDBACK,PUPIL_CLASS_WORK.CLASS_SCORE,CLASS_WORK.MAX_SCORE FROM PUPIL_CLASS_WORK,PUPILS,CLASS_WORK WHERE PUPIL_CLASS_WORK.PUPIL_NUMBER=PUPILS.PUPIL_NUMBER AND PUPIL_CLASS_WORK.CLASS_WORK_TITLE=CLASS_WORK.CLASS_WORK_TITLE AND (PUPIL_CLASS_WORK.CLASS_WORK_TITLE='"+search+"' AND PUPIL_CLASS_WORK.PUPIL_NUMBER='"+pupilNum+"')");
                DefaultTableModel model = (DefaultTableModel) tblClass.getModel();
                if (result != null)
                {
                    while (model.getRowCount() > 0)
                    {
                        model.removeRow(0);
                    }
                    while (result.next())
                    {
                        pupil = result.getString("PUPIL_NUMBER");
                        first = result.getString("PUPIL_FIRST_NAME");
                        last = result.getString("PUPIL_LAST_NAME");
                        title = result.getString("CLASS_WORK_TITLE");
                        feed = result.getString("FEEDBACK");
                        score = result.getInt("CLASS_SCORE");
                        max = result.getInt("MAX_SCORE");
                        percent = Math.floor((score/max)*100);//calculate the precentage of the score
                        //change everything to an int
                        int scoreI = (int)score;
                        int maxI = (int)max;
                        int percentI = (int)percent;
                        model.addRow(new Object[]{pupil, first, last, title, feed, scoreI,maxI,percentI});
                    }
                    txtSearch.setText("");
                    lblMessage.setText("");
                }
                else
                {
                    lblMessage.setText("No records found");
                }
                stmt.close();
                conn.close();
                result.close();
            }//end try
            catch (Exception ex) {
                System.err.print("SQLException: ");
                System.err.println(ex.getMessage());
            }//end catch
        }//end else
    }//end try
    catch(Exception e){
        lblMessage.setText(e.getMessage());
    }
    
}//END METHOD SEARCH
public void print() throws PrinterException{
    //this prints the table
    tblClass.print();
}
    /**
    * @param args the command line arguments
    */
    /**
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PupilCWRecord().setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClass;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblWel;
    private javax.swing.JTable tblClass;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

}
