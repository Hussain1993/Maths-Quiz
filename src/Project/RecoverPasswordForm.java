/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RecoverPasswordForm.java
 *
 * Created on 07-Jan-2011, 15:58:33
 */

package Project;

import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

/**
 *
 * @author Hussain Miah
 */
public class RecoverPasswordForm extends javax.swing.JFrame {

    /** Creates new form RecoverPasswordForm */
    public RecoverPasswordForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblWelcome1 = new javax.swing.JLabel();
        lblWelcome2 = new javax.swing.JLabel();
        lblWelcome3 = new javax.swing.JLabel();
        lblFirst = new javax.swing.JLabel();
        lblLast = new javax.swing.JLabel();
        lblPlace = new javax.swing.JLabel();
        lblBirth = new javax.swing.JLabel();
        txtFirst = new javax.swing.JTextField();
        txtPlace = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        lblFirstMsg = new javax.swing.JLabel();
        lblLastMsg = new javax.swing.JLabel();
        lblPlaceMsg = new javax.swing.JLabel();
        lblDateMsg = new javax.swing.JLabel();
        txtLast = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRecover = new javax.swing.JTable();
        lblTableMsg = new javax.swing.JLabel();
        btnRecover = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recover Username and Password");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recover your Username and Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lblWelcome1.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblWelcome1.setText("You are about to recover your lost Username and Password.");

        lblWelcome2.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblWelcome2.setText("To get your details back you will have to enter all the information needed");

        lblWelcome3.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblWelcome3.setText("in the from below.");

        lblFirst.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblFirst.setText("Enter your first name:");

        lblLast.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblLast.setText("Enter your last name:");

        lblPlace.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblPlace.setText("Enter your place of birth:");

        lblBirth.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblBirth.setText("Enter your date of birth:");

        txtFirst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFirstFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFirstFocusLost(evt);
            }
        });

        txtPlace.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlaceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlaceFocusLost(evt);
            }
        });

        txtDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDateFocusLost(evt);
            }
        });

        txtLast.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLastFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLastFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblWelcome1)
                    .addComponent(lblWelcome2)
                    .addComponent(lblWelcome3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblBirth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblPlace)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblLast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblFirst)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFirstMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(lblLastMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(lblPlaceMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(lblDateMsg, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBirth, lblFirst, lblLast, lblPlace});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDate, txtFirst, txtLast, txtPlace});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDateMsg, lblFirstMsg, lblLastMsg, lblPlaceMsg});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWelcome2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWelcome3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirst)
                    .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstMsg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLast)
                    .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastMsg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlace)
                    .addComponent(txtPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlaceMsg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBirth)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateMsg))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tblRecover.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRecover);

        btnRecover.setText("Recover");
        btnRecover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecoverActionPerformed(evt);
            }
        });

        btnLogin.setText("Go Back to Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTableMsg)
                        .addContainerGap(260, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRecover)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTableMsg)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRecover)
                            .addComponent(btnLogin))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecoverActionPerformed
        try{
            if (blankForm() == true)//check for a blank form
            {
                if (valFirst() == false || valLast() == false || valPlace() == false || valDate() == false)//check that text feilds follow validation rules
                {
                    throw new Exception ("Error on form");
                }
                else
                {
                    recoverDetails();//recover the username and password
                }
            }
            else
            {
                throw new Exception ("The form is blank");
            }
        }//end try
        catch(Exception e){
            lblTableMsg.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnRecoverActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        //display login screen
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtFirstFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstFocusGained
        lblFirstMsg.setText("Only letters");
    }//GEN-LAST:event_txtFirstFocusGained

    private void txtFirstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstFocusLost
        try{
            if (txtFirst.getText().length() == 0)
            {
                throw new Exception ("Enter first name");
            }
            else
            {
                String patt = "^[A-Za-z]+$";//only letters
                Pattern regPat = Pattern.compile(patt);
                String first = txtFirst.getText();
                Matcher matcher = regPat.matcher(first);
                if (matcher.find())
                {
                    throw new Exception ("");
                }
                else
                {
                    throw new Exception ("Only letters can be entered");
                }
            }//end else
        }//end try
        catch (Exception e){
            lblFirstMsg.setText(e.getMessage());
        }
        
    }//GEN-LAST:event_txtFirstFocusLost

    private void txtLastFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLastFocusGained
        lblLastMsg.setText("Only letters");
    }//GEN-LAST:event_txtLastFocusGained

    private void txtLastFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLastFocusLost
        try{
            if (txtLast.getText().length() == 0)
            {
                throw new Exception ("Enter last name");
            }
            else
            {
                String patt = "^[A-Za-z]+$";
                Pattern regPat = Pattern.compile(patt);
                String last = txtLast.getText();
                Matcher matcher = regPat.matcher(last);
                if (matcher.find())
                {
                    throw new Exception ("");
                }
                else
                {
                    throw new Exception ("Only letters can be entered");
                }
            }//end else
        }//end try
        catch(Exception e){
            lblLastMsg.setText(e.getMessage());
        }
    }//GEN-LAST:event_txtLastFocusLost

    private void txtPlaceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlaceFocusGained
        lblPlaceMsg.setText("Only letters");
    }//GEN-LAST:event_txtPlaceFocusGained

    private void txtPlaceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlaceFocusLost
        try{
             if (txtPlace.getText().length() == 0)
             {
                 throw new Exception ("Enter place of birth");
             }
             else
             {
                 String patt = "^[A-Za-z]+$";
                 Pattern regPat = Pattern.compile(patt);
                 String place = txtPlace.getText();
                 Matcher matcher = regPat.matcher(place);
                 if (matcher.find())
                 {
                     throw new Exception ("");
                 }
                 else
                 {
                     throw new Exception ("Only letters can be entered");
                 }
             }//end else
        }//end try
            
        catch(Exception e){
            lblPlaceMsg.setText(e.getMessage());
        }
    }//GEN-LAST:event_txtPlaceFocusLost

    private void txtDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusGained
        lblDateMsg.setText("Enter date in format DD/MM/YYYY");
    }//GEN-LAST:event_txtDateFocusGained

    private void txtDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusLost
        try{
            if (txtDate.getText().length() == 0)
            {
                throw new Exception ("Enter date of birth");
            }
            else
            {
                String patt = "^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$";
                //regular expression for date
                Pattern regPat = Pattern.compile(patt);
                String DOB = txtDate.getText();
                Matcher matcher = regPat.matcher(DOB);
                if (matcher.find())
                {
                    throw new Exception ("");
                }
                else
                {
                    throw new Exception ("Invalid date format");
                }
            }
        }
        catch(Exception e){
            lblDateMsg.setText(e.getMessage());
        }
    }//GEN-LAST:event_txtDateFocusLost
public void recoverDetails(){
    /**
     * This gets the user name and password form the database
     */
    String first = txtFirst.getText();
    String last = txtLast.getText();
    String place = txtPlace.getText();
    String DOB = "";
    String user = "";
    String pass = "";
    boolean found = false;
    SimpleDateFormat inFmt = new SimpleDateFormat ("dd/MM/yyyy");
    SimpleDateFormat outFmt = new SimpleDateFormat ("yyyy-MM-dd");
    //change date format
    try{
        DOB = outFmt.format(inFmt.parse(txtDate.getText()));
    }//end try
    catch(ParseException e){
        System.err.print("ParseException: ");
        System.err.println(e.getMessage());
    }
    try{
        //connect to database
        DatabaseConnect.init();
        Connection conn = DatabaseConnect.getConnection();
        //enable SQL statemets
        Statement stmt = conn.createStatement();
        String query = "SELECT USER_NAME,PASSWORD FROM LOGIN where FIRST_NAME ='"+first+"'AND " +
                "LAST_NAME ='"+last+"'AND BIRTH_PLACE ='"+place+"'AND DATE_OF_BIRTH ={d'"+DOB+"'}";
        ResultSet result = stmt.executeQuery(query);
        if (result != null && result.next())
        {
            user = result.getString("USER_NAME");
            pass = result.getString("PASSWORD");
            found = true;
        }
        else
        {
            found = false;
            lblTableMsg.setText("No records have been found");
        }
        if (found == true)
        {
            DefaultTableModel model = (DefaultTableModel)tblRecover.getModel();
            //clear table
            while (model.getRowCount()>0)
            {
                model.removeRow(0);
            }
            model.addRow(new Object[]{user,pass});
        }
        stmt.close();
        conn.close();
        result.close();
    }//end try
    catch(Exception ex){
        System.err.print("SQLException: ");
        System.err.println(ex.getMessage());
    }
}//END METHOD RECOVERDETAILS
public boolean blankForm(){
    //check if form is blank
    boolean state = true;
    if (txtFirst.getText().length() == 0)
    {
        state = false;
        lblFirstMsg.setText("Enter first name");
    }
    if (txtLast.getText().length() == 0)
    {
        state = false;
        lblLastMsg.setText("Enter last name");
    }
    if (txtPlace.getText().length() == 0)
    {
        state = false;
        lblPlaceMsg.setText("Enter place of birth");
    }
    if (txtDate.getText().length() == 0)
    {
        state = false;
        lblDateMsg.setText("Enter date of birth");
    }
    return state;
}//END METHOD BLANKFORM
public boolean valFirst(){
    //validates first
    boolean state = true;
    String patt = "^[A-Za-z]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtFirst.getText());
    if (matcher.find())
    {
        state = true;
        lblFirstMsg.setText("");
    }
    else
    {
        state = false;
        lblFirstMsg.setText("Only letters can be entered");
    }
    return state;
}//END METHOD VALFIRST
public boolean valLast(){
    //validates last
    boolean state = true;
    String patt = "^[A-Za-z]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtLast.getText());
    if (matcher.find())
    {
        state = true;
        lblLastMsg.setText("");
    }
    else
    {
        state = false;
        lblLastMsg.setText("Only letters can be entered");
    }
    return state;
}//END METHOD VALLAST
public boolean valPlace(){
    //validates place of birth
    boolean state = true;
    String patt = "^[A-Za-z]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtPlace.getText());
    if (matcher.find())
    {
        state = true;
        lblPlaceMsg.setText("");
    }
    else
    {
        state = false;
        lblPlaceMsg.setText("Only letters can be entered");
    }
    return state;
}//END METHOD VALPLACE
public boolean valDate(){
    //validates place of birth
    boolean state = true;
    String patt = "^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtDate.getText());
    if (matcher.find())
    {
        state = true;
        lblDateMsg.setText("");
    }
    else
    {
        state = false;
        lblDateMsg.setText("Invalid date");
    }
    return state;
}//END METHOD VALDATE
    /**
    * @param args the command line arguments
    */
/*
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecoverPasswordForm().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRecover;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBirth;
    private javax.swing.JLabel lblDateMsg;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblFirstMsg;
    private javax.swing.JLabel lblLast;
    private javax.swing.JLabel lblLastMsg;
    private javax.swing.JLabel lblPlace;
    private javax.swing.JLabel lblPlaceMsg;
    private javax.swing.JLabel lblTableMsg;
    private javax.swing.JLabel lblWelcome1;
    private javax.swing.JLabel lblWelcome2;
    private javax.swing.JLabel lblWelcome3;
    private javax.swing.JTable tblRecover;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFirst;
    private javax.swing.JTextField txtLast;
    private javax.swing.JTextField txtPlace;
    // End of variables declaration//GEN-END:variables

}
