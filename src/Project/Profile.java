/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Profile.java
 *
 * Created on 23-Jan-2011, 18:51:01
 */

package Project;
import java.awt.Color;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.regex.*;
import javax.swing.JOptionPane;

/**
 *
 * @author kk
 */
public class Profile extends javax.swing.JFrame {
      String pupil = "";
    /** Creates new form Profile */
    public Profile(String pupilNum) {
        initComponents();
        pupil = pupilNum;
        displayProfile();//display the pupil profile
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPic = new javax.swing.JLabel();
        lblPupilNum = new javax.swing.JLabel();
        txtPupilNum = new javax.swing.JTextField();
        lblFirst = new javax.swing.JLabel();
        txtFirst = new javax.swing.JTextField();
        lblLast = new javax.swing.JLabel();
        txtLast = new javax.swing.JTextField();
        lblAddress1 = new javax.swing.JLabel();
        txtAddress1 = new javax.swing.JTextField();
        lblAddress2 = new javax.swing.JLabel();
        txtAddress2 = new javax.swing.JTextField();
        lblPostcode = new javax.swing.JLabel();
        txtPostcode = new javax.swing.JTextField();
        lblTele = new javax.swing.JLabel();
        txtTele = new javax.swing.JTextField();
        lblParent = new javax.swing.JLabel();
        txtParent = new javax.swing.JTextField();
        lblBirth = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblMedical = new javax.swing.JLabel();
        txtMedical = new javax.swing.JTextField();
        lblDateSchool = new javax.swing.JLabel();
        txtDateSchool = new javax.swing.JTextField();
        lblPrevious = new javax.swing.JLabel();
        txtPrevious = new javax.swing.JTextField();
        lblLearning = new javax.swing.JLabel();
        txtLearning = new javax.swing.JTextField();
        lblDiet = new javax.swing.JLabel();
        txtDiet = new javax.swing.JTextField();
        lblEthnic = new javax.swing.JLabel();
        txtEthnic = new javax.swing.JTextField();
        lblSkill = new javax.swing.JLabel();
        cboSkill = new javax.swing.JComboBox();
        lblGender = new javax.swing.JLabel();
        cboGender = new javax.swing.JComboBox();
        btnEdit = new javax.swing.JButton();
        btnClass = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        btnHWRecord = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblNotes = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pupil Profile");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pupil Profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        lblPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/resources/facebook-profile-default.gif"))); // NOI18N

        lblPupilNum.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblPupilNum.setText("Pupil Number:");

        txtPupilNum.setEditable(false);

        lblFirst.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblFirst.setText("First Name:");

        lblLast.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblLast.setText("Last Name:");

        lblAddress1.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblAddress1.setText("Address 1:");

        lblAddress2.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblAddress2.setText("Address 2:");

        lblPostcode.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblPostcode.setText("Postcode:");

        lblTele.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblTele.setText("Telephone Number:");

        lblParent.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblParent.setText("Parent Name:");

        lblBirth.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblBirth.setText("Date of Birth:");

        lblMedical.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblMedical.setText("Medical Conditions:");

        lblDateSchool.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblDateSchool.setText("Date Started School:");

        lblPrevious.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblPrevious.setText("Previous School:");

        lblLearning.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblLearning.setText("Learning Difficulties:");

        lblDiet.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblDiet.setText("Dietary Needs:");

        lblEthnic.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblEthnic.setText("Ethnic Background:");

        lblSkill.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblSkill.setText("Skill Level:");

        cboSkill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Easy", "Hard" }));

        lblGender.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblGender.setText("Gender:");

        cboGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male ", "Female" }));

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnClass.setText("Class Work Record");
        btnClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClassActionPerformed(evt);
            }
        });

        lblMessage.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblMessage.setText("jLabel1");

        btnHWRecord.setText("Homework Record");
        btnHWRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHWRecordActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Pupil");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblNotes.setFont(new java.awt.Font("Tahoma", 0, 12));
        lblNotes.setText("Notes:");

        jScrollPane1.setViewportView(txtNotes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPic)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGender)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblMedical)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMedical, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblBirth)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblParent)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtParent, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblTele)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTele, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblAddress1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtAddress1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblPupilNum)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPupilNum, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblFirst)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFirst, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblLast)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtLast, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblAddress2)
                                        .addComponent(lblPostcode))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPostcode, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addComponent(txtAddress2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblDateSchool)
                                        .addComponent(lblPrevious))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addComponent(txtDateSchool, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblLearning)
                                        .addComponent(lblDiet))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDiet, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addComponent(txtLearning, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblEthnic)
                                        .addComponent(lblSkill)
                                        .addComponent(lblNotes))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addComponent(cboSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEthnic, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                        .addComponent(cboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(325, 325, 325))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHWRecord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblMessage)
                        .addContainerGap(439, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblAddress1, lblAddress2, lblBirth, lblDateSchool, lblDiet, lblEthnic, lblFirst, lblGender, lblLast, lblLearning, lblMedical, lblParent, lblPostcode, lblPrevious, lblPupilNum, lblSkill, lblTele});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddress1, txtAddress2, txtDate, txtDateSchool, txtDiet, txtEthnic, txtFirst, txtLast, txtLearning, txtMedical, txtParent, txtPostcode, txtPrevious, txtPupilNum, txtTele});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPupilNum)
                            .addComponent(txtPupilNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirst))
                        .addGap(6, 6, 6))
                    .addComponent(lblPic, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLast))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress1)
                    .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress2)
                    .addComponent(txtAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostcode)
                    .addComponent(txtPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTele)
                    .addComponent(txtTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParent)
                    .addComponent(txtParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBirth)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMedical)
                    .addComponent(txtMedical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateSchool)
                    .addComponent(txtDateSchool, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrevious)
                    .addComponent(txtPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLearning)
                    .addComponent(txtLearning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiet)
                    .addComponent(txtDiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEthnic)
                    .addComponent(txtEthnic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSkill)
                    .addComponent(cboSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(cboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNotes)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnClass)
                    .addComponent(btnHWRecord)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addComponent(lblMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClassActionPerformed
        showClassRecord();
}//GEN-LAST:event_btnClassActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        edit();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHWRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHWRecordActionPerformed
        showHomeworkRecord();
    }//GEN-LAST:event_btnHWRecordActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String pupilNum = txtPupilNum.getText();
        int n = JOptionPane.showConfirmDialog(this,"Do you want to delete "+txtFirst.getText()+" from the database?","Confirm Delete",JOptionPane.YES_NO_OPTION);//Asking the user if they are sure that they want to delete a pupil
        switch (n)
        {
            case 0 : Delete(pupilNum);break;//pressing "Yes"
            case 1 : break;//pressing "No"
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
public void displayProfile(){
    //Display the pupil profile
    String first = "";
    String last = "";
    String notes = "";
    String address1 = "";
    String address2 = "";
    String post = "";
    String tele = "";
    String parent = "";
    String birth = "";
    String medical = "";
    String started = "";
    String previous = "";
    String learning = "";
    String diet = "";
    String ethnic = "";
    String skill = "";
    String gender = "";
    boolean found = false;
    try{
        DatabaseConnect.init();
        Connection conn = DatabaseConnect.getConnection();
        Statement stmt = conn.createStatement();
        ResultSet result = stmt.executeQuery("SELECT * FROM PUPILS WHERE PUPIL_NUMBER='"+pupil+"'");//retrive all the data about the pupil from the database
        if (result != null && result.next())
        {
            found = true;
            first = result.getString("PUPIL_FIRST_NAME");
            last = result.getString("PUPIL_LAST_NAME");
            notes = result.getString("NOTES_ON_PUPIL");
            address1 = result.getString("ADDRESS_1");
            address2 = result.getString("ADDRESS_2");
            post = result.getString("POSTCODE");
            tele = result.getString("TELEPHONE_NUMBER");
            parent = result.getString("PARENT_GURDIAN_NAME");
            birth = result.getString("DATE_OF_BIRTH");
            medical = result.getString("MEDICAL_CONDITIONS");
            started = result.getString("DATE_STARTED_SCHOOL");
            previous = result.getString("PREVIOUS_SCHOOL");
            learning = result.getString("LEARNING_DIFFICULTIES");
            diet = result.getString("DIETARY_NEEDS");
            ethnic = result.getString("ETHNIC_BACKGROUND");
            skill = result.getString("SKILL_LEVEL");
            gender = result.getString("GENDER");
        }
        else
        {
            found = false;
        }
        if (found == true)
        {
            //display the records in their text boxes
            txtPupilNum.setText(pupil);
            txtFirst.setText(first);
            txtLast.setText(last);
            txtAddress1.setText(address1);
            txtAddress2.setText(address2);
            txtPostcode.setText(post);
            txtTele.setText(tele);
            txtParent.setText(parent);
            txtMedical.setForeground(Color.GREEN);
            txtMedical.setText(medical);
            txtPrevious.setText(previous);
            txtLearning.setForeground(Color.GREEN);
            txtLearning.setText(learning);
            txtDiet.setForeground(Color.GREEN);
            txtDiet.setText(diet);
            txtEthnic.setText(ethnic);
            txtNotes.setText(notes);
            //change what the combo box will show on the user interface
            if (skill.equals("Easy"))
            {
                cboSkill.setSelectedIndex(0);
            }
            else
            {
                cboSkill.setSelectedIndex(1);
            }
            if (gender.equals("Male"))
            {
                cboGender.setSelectedIndex(0);
            }
            if (gender.equals("Female"))
            {
                cboGender.setSelectedIndex(1);
            }//end else
            SimpleDateFormat inFmt = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat outFmt = new SimpleDateFormat("dd/MM/yyyy");
            try{
                  String birthS = outFmt.format(inFmt.parse(birth.toString()));
                  txtDate.setText(birthS);
                  String startedS = outFmt.format(inFmt.parse(started.toString()));
                  txtDateSchool.setText(startedS);
            }
            catch(ParseException e){
                lblMessage.setText(e.getMessage());
            }//end catch
        }//end if
        stmt.close();
        conn.close();
        result.close();
    }//end try
    catch(Exception ex){
        System.err.print("SQLException: ");
        System.err.println(ex.getMessage());
    }//end catch
}//end method
public void edit(){
    //edit a record
    String first = txtFirst.getText();
    String last = txtLast.getText();
    String notes =  txtNotes.getText();
    String address1 = txtAddress1.getText();
    String address2 = txtAddress2.getText();
    String post = txtPostcode.getText();
    String tele = txtTele.getText();
    String parent = txtParent.getText();
    String birth = "";
    String medical = txtMedical.getText();
    String dateSchool = ""; 
    String previous = txtPrevious.getText();
    String learning = txtLearning.getText();
    String diet = txtDiet.getText();
    String ethnic = txtEthnic.getText();
    Object skill = cboSkill.getSelectedItem();//get what is selected from the combo box
    String skillS = (String)skill;//change to string
    String gender = cboGender.getSelectedItem().toString();
    SimpleDateFormat inFmt = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat outFmt = new SimpleDateFormat("yyyy-MM-dd");
    try{
        birth = outFmt.format(inFmt.parse(txtDate.getText()));
        dateSchool = outFmt.format(inFmt.parse(txtDateSchool.getText()));
    }
    catch(ParseException e){
           lblMessage.setText(e.getMessage());
    }//end catch
    try{
        if (blankForm() == false)
        {
            throw new Exception ("Error on form");
        }
        else
        {
            if (valFirst() == false || valLast() == false || valAddress1() == false || valAddress2() == false || valPost() == false || valTele() == false || valParent() == false || valBirth() == false || valDateSchool() == false || valEthnic() == false)
            {
                throw new Exception ("Error on form");
            }
            else
            {
                  try{
                         DatabaseConnect.init();
                         Connection conn = DatabaseConnect.getConnection();
                         Statement stmt = conn.createStatement();
                         stmt.executeUpdate("UPDATE PUPILS SET PUPIL_FIRST_NAME='"+first+"',PUPIL_LAST_NAME='"+last+"',ADDRESS_1='"+address1+"',ADDRESS_2='"+address2+"',POSTCODE='"+post+"',TELEPHONE_NUMBER='"+tele+"',PARENT_GURDIAN_NAME='"+parent+"',DATE_OF_BIRTH={d'"+birth+"'},MEDICAL_CONDITIONS='"+medical+"',DATE_STARTED_SCHOOL={d'"+dateSchool+"'},PREVIOUS_SCHOOL='"+previous+"',LEARNING_DIFFICULTIES='"+learning+"',DIETARY_NEEDS='"+diet+"',ETHNIC_BACKGROUND='"+ethnic+"',SKILL_LEVEL='"+skillS+"',GENDER='"+gender+"',NOTES_ON_PUPIL='"+notes+"' WHERE PUPIL_NUMBER='"+pupil+"'");//update the record
                         ResultSet result = stmt.executeQuery("SELECT * FROM PUPILS WHERE PUPIL_NUMBER='"+pupil+"'");//check that the record has been updated
                         if (result.next())
                         {
                             lblMessage.setForeground(Color.GREEN);
                             lblMessage.setText("Record changed");
                             displayProfile();//show all the records
                         }
                         else
                         {
                             lblMessage.setText("Record not changed");
                         }
                         stmt.close();
                         conn.close();
                         result.close();
                  }//end try
                  catch(Exception ex){
                      System.err.print("SQLException: ");
                      System.err.println(ex.getMessage());
                  }//end catch
            }//end else
        }//end else
    }// end try
    catch(Exception r){
        lblMessage.setText(r.getMessage());
    }//end catch
}//end method
public void showClassRecord(){
    /**
     * Procedure passes the pupils first name to another
     * form to display that pupils classwork record
     */
    String first = txtFirst.getText();
    new PupilCWRecord(pupil,first).setVisible(true);
    this.dispose();
}//end method
public void showHomeworkRecord(){
    /**
     * Procedure passes the pupils first name to another
     * form to display that pupils homework record
     */
    String first = txtFirst.getText();
    new PupilHWRecord(pupil,first).setVisible(true);
    this.dispose();
}//end method
public boolean blankForm(){
    //check for a blank from
    boolean state = true;
    if (txtFirst.getText().isEmpty())
    {
        state = false;
        lblFirst.setForeground(Color.RED);
    }
    else
    {
        valFirst();
        lblFirst.setForeground(Color.BLACK);
    }
    if (txtLast.getText().isEmpty())
    {
        state = false;
        lblLast.setForeground(Color.RED);
    }
    else
    {
        valLast();
        lblLast.setForeground(Color.BLACK);
    }
    if (txtAddress1.getText().isEmpty())
    {
        state = false;
        lblAddress1.setForeground(Color.RED);
    }
    else
    {
        valAddress1();
        lblAddress1.setForeground(Color.BLACK);
    }
    if (txtAddress2.getText().isEmpty())
    {
        state = false;
        lblAddress2.setForeground(Color.RED);
    }
    else
    {
        valAddress2();
        lblAddress2.setForeground(Color.BLACK);
    }
    if (txtPostcode.getText().isEmpty())
    {
        state = false;
        lblPostcode.setForeground(Color.RED);
    }
    else
    {
        valPost();
        lblPostcode.setForeground(Color.BLACK);
    }
    if (txtTele.getText().isEmpty())
    {
        state = false;
        lblTele.setForeground(Color.RED);
    }
    else
    {
        valTele();
        lblTele.setForeground(Color.BLACK);
    }
    if (txtParent.getText().isEmpty())
    {
        state = false;
        lblParent.setForeground(Color.RED);
    }
    else
    {
        valParent();
        lblParent.setForeground(Color.BLACK);
    }
    if (txtDate.getText().isEmpty())
    {
        state = false;
        lblBirth.setForeground(Color.RED);
    }
    else
    {
        valBirth();
        lblBirth.setForeground(Color.BLACK);
    }
    if (txtDateSchool.getText().isEmpty())
    {
        state = false;
        lblDateSchool.setForeground(Color.RED);
    }
    else
    {
        valDateSchool();
        lblDateSchool.setForeground(Color.BLACK);
    }
    if (txtEthnic.getText().isEmpty())
    {
        state = false;
        lblEthnic.setForeground(Color.RED);
    }
    else
    {
        valEthnic();
        lblEthnic.setForeground(Color.BLACK);
    }
    return state;
}// end method
public boolean valFirst(){
    //validate the first name
    boolean state = true;
    String patt = "^[A-Za-z\\s]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtFirst.getText());
    if (matcher.find())
    {
        state = true;
        lblFirst.setForeground(Color.BLACK);
    }
    else
    {
        state = false;
        lblFirst.setForeground(Color.RED);

    }
    return state;
}
public boolean valLast(){
    //validate the last name
    boolean state = true;
    String patt = "^[A-Za-z\\s]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtLast.getText());
    if (matcher.find())
    {
        state = true;
        lblLast.setForeground(Color.BLACK);
    }
    else
    {
        state = false;
        lblLast.setForeground(Color.RED);
    }
    return state;
}
public boolean valAddress1(){
    //validate address 1
    boolean state = true;
    String patt = "^[A-Za-z0-9\\s]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtAddress1.getText());
    if (matcher.find())
    {
        state = true;
        lblAddress1.setForeground(Color.BLACK);
    }
    else
    {
        state = false;
        lblAddress1.setForeground(Color.RED);
    }
    return state;
}
public boolean valAddress2(){
    //validate address 2
    boolean state = true;
    String patt = "^[A-Za-z0-9\\s]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtAddress2.getText());
    if (matcher.find())
    {
        state = true;
        lblAddress2.setForeground(Color.BLACK);
    }
    else
    {
        state = false;
        lblAddress2.setForeground(Color.RED);
    }
    return state;
}
public boolean valPost(){
    //validate postcode
    boolean state = true;
    String patt = "^[a-zA-Z]{1,2}[0-9][0-9A-Za-z]{0,1} {0,1}[0-9][A-Za-z]{2}$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtPostcode.getText());
    if (matcher.find())
    {
        state = true;
    }
    else
    {
        state = false;
        lblPostcode.setForeground(Color.RED);

    }
    return state;
}
public boolean valTele(){
    //validate telephone
    boolean state = true;
      String patt = "^02([\\d]{3})[(\\D\\s)]?[\\d]{3}[(\\D\\s)]?[\\d]{3}$";
      Pattern regPat = Pattern.compile(patt);
      Matcher matcher = regPat.matcher(txtTele.getText());
      if (matcher.find() == false)
      {
          state = false;
          lblTele.setForeground(Color.RED);

      }
      else
      {
          lblTele.setForeground(Color.BLACK);
      }
    return state;
}
public boolean valParent(){
    //validate parent name
    boolean state = true;
    String patt = "^[A-Za-z\\s]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtParent.getText());
    if (matcher.find() == false)
    {
        lblParent.setForeground(Color.RED);
        state = false;
    }
    else
    {
        lblParent.setForeground(Color.BLACK);
    }
    return state;
}
public boolean valBirth(){
    //validate date of birth
    boolean state = true;
    String patt = "^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtDate.getText());
    if (matcher.find() == false)
    {
        state = false;
        lblBirth.setForeground(Color.RED);
    }
    else
    {
        lblBirth.setForeground(Color.BLACK);
    }
    return state;
}
public boolean valDateSchool(){
    //validate date started school
    boolean state = true;
    String patt = "^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtDateSchool.getText());
    if (matcher.find() == false)
    {
        state = false;
        lblDateSchool.setForeground(Color.RED);
    }
    else
    {
        lblDateSchool.setForeground(Color.BLACK);
    }
    return state;
}
public boolean valEthnic(){
    //validate ethnic background
    boolean state = true;
    String patt = "^[A-Za-z\\s-]+$";
    Pattern regPat = Pattern.compile(patt);
    Matcher matcher = regPat.matcher(txtEthnic.getText());
    if (matcher.find() == false)
    {
        lblEthnic.setForeground(Color.RED);
        state = false;
    }
    else
    {
        lblEthnic.setForeground(Color.BLACK);
    }
    return state;
}//end method
public void Delete(String pupilNum){
    //This deletes a pupil from the database
    try{
        DatabaseConnect.init();
        Connection conn = DatabaseConnect.getConnection();
        Statement stmt = conn.createStatement();
        stmt.executeUpdate("DELETE FROM PUPILS WHERE PUPIL_NUMBER='"+pupilNum+"'");
        ResultSet result = stmt.executeQuery("SELECT * FROM PUPILS WHERE PUPIL_NUMBER='"+pupilNum+"'");
        if (result.next())
        {
            Object [] options = {"Try Again"};
            JOptionPane.showOptionDialog(this, "The record was not deleted try again", "Warning", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, options, options[0]);
        }
        else
        {
            Object [] options = {"OK"};
            int n = JOptionPane.showOptionDialog(this, "The record has been deleted", "Warning", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
            switch (n)
            {
                case 0 : this.dispose(); new pupilDiary().setVisible(true);break;
            }
        }//end else
        stmt.close();
        conn.close();
        result.close();
    }//end try
    catch(Exception ex){
        System.err.print("SQLException: ");
        System.err.println(ex.getMessage());
    }

}//end method
    /**
    * @param args the command line arguments
    */
    /**
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClass;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHWRecord;
    private javax.swing.JComboBox cboGender;
    private javax.swing.JComboBox cboSkill;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblAddress2;
    private javax.swing.JLabel lblBirth;
    private javax.swing.JLabel lblDateSchool;
    private javax.swing.JLabel lblDiet;
    private javax.swing.JLabel lblEthnic;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLast;
    private javax.swing.JLabel lblLearning;
    private javax.swing.JLabel lblMedical;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblNotes;
    private javax.swing.JLabel lblParent;
    private javax.swing.JLabel lblPic;
    private javax.swing.JLabel lblPostcode;
    private javax.swing.JLabel lblPrevious;
    private javax.swing.JLabel lblPupilNum;
    private javax.swing.JLabel lblSkill;
    private javax.swing.JLabel lblTele;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtAddress2;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDateSchool;
    private javax.swing.JTextField txtDiet;
    private javax.swing.JTextField txtEthnic;
    private javax.swing.JTextField txtFirst;
    private javax.swing.JTextField txtLast;
    private javax.swing.JTextField txtLearning;
    private javax.swing.JTextField txtMedical;
    private javax.swing.JTextPane txtNotes;
    private javax.swing.JTextField txtParent;
    private javax.swing.JTextField txtPostcode;
    private javax.swing.JTextField txtPrevious;
    private javax.swing.JTextField txtPupilNum;
    private javax.swing.JTextField txtTele;
    // End of variables declaration//GEN-END:variables

}
